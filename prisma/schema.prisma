// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id               String    @id @default(cuid())
  clerkId          String    @unique
  name             String
  email            String    @unique
  balance          Float     @default(0)
  adsWatched       Int       @default(0)
  watchTimeMinutes Int       @default(0)
  feedbackScore    Int       @default(100)
  createdAt        DateTime  @default(now())
  updatedAt        DateTime  @updatedAt
  adWatches        AdWatch[]
}

model Ad {
  id          String     @id @default(cuid())
  title       String
  description String
  duration    Int
  reward      Float
  category    String
  difficulty  String
  videoUrl    String
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  questions   Question[]
  adWatches   AdWatch[]
}

model Question {
  id       String   @id @default(cuid())
  question String
  options  String[]
  ad       Ad       @relation(fields: [adId], references: [id], onDelete: Cascade)
  adId     String
  answers  Answer[]
}

model AdWatch {
  id        String   @id @default(cuid())
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    String
  ad        Ad       @relation(fields: [adId], references: [id], onDelete: Cascade)
  adId      String
  watchTime Int
  completed Boolean  @default(false)
  feedback  String?
  createdAt DateTime @default(now())
  answers   Answer[]
}

model Answer {
  id         String  @id @default(cuid())
  question   Question @relation(fields: [questionId], references: [id], onDelete: Cascade)
  questionId String
  adWatch    AdWatch @relation(fields: [adWatchId], references: [id], onDelete: Cascade)
  adWatchId  String
  answer     String
}

